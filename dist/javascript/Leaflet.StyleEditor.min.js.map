{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/./src/typescript/index.ts","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/StyleEditorClass.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorControl.ts","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/marker/index.ts","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/types/IconOptions.ts","webpack://leafletstyleeditor/./src/typescript/types/Size.ts","webpack://leafletstyleeditor/./src/typescript/types/index.ts","webpack://leafletstyleeditor/./src/typescript/marker/GlyphiconMarker.ts","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/PopupContentElement.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/form/GeometryForm.ts","webpack://leafletstyleeditor/./src/typescript/formElements/DashElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/OpacityElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/WeightElement.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/formElements/IconElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/SizeElement.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StyleEditorClass_1","StyleEditorControl_1","L","StyleEditor","StyleEditorClass","styleEditor","Control","StyleEditorControl","control","options","default","undefined","Class","__importDefault","this","mod","StyleForm_1","marker_1","form_1","_1","Util_1","DefaultOptions","position","colorRamp","defaultColor","markerType","DefaultMarker","markers","defaultMarkerIcon","defaultMarkerColor","markerForm","MarkerForm","geometryForm","GeometryForm","ignoreLayerTypes","forms","events","openOnLeafletDraw","openOnLeafletEditable","showTooltip","strings","cancel","cancelTitle","tooltip","tooltipNext","useGrouping","styleEditorEventPrefix","opt","assign","super","map","Util","createInstance","controlUI","DomUtil","title","cancelUI","innerHTML","editorUI","getContainer","styleEditorHeader","styleEditorInterior","buttonNext","tooltipWrapper","tooltipUI","DomEvent","disableScrollPropagation","disableClickPropagation","on","toggle","onNext","addEventListeners","StyleForm","forEach","event","onEvent","hideEditor","hasClass","stopPropagation","disable","enable","layer","layerIsIgnored","addClass","eachLayer","addEditClickEvents","showCancelButton","isEnabled","removeIndicators","children","getPanes","markerPane","index","length","element","removeClass","LayerGroup","Marker","Path","some","layerType","type","toUpperCase","hideCancelButton","hideTooltip","fireEvent","eventName","styleEditorDiv","util","getInstance","createMarkerForm","createGeometryForm","addDOMEvents","addListener","lostFocus","hide","markerDiv","clearForm","show","fireChangeEvent","e","parent","target","className","parentNode","UtilOptions","instance","rgb","noHash","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","currentElement","option","style","newStyle","setStyle","color","hex","toString","rgbToHex","controlMarkers","Array","isArray","keys","includes","filter","getMarkersForColor","defMarkers","defaultMarker","push","Marker_1","DefaultMarker_1","GlyphiconMarker_1","GlyphiconMarker","types_1","iconOptions","iconClass","iconSize","Icon","iconUrl","_getMarkerUrlForStyle","dimen","iconColor","icon","iconAnchor","popupAnchor","parentUiElement","tmpOptions","IconOptions","Size","Small","createMarkerIcon","selectIconClass","createIcon","outerHTML","_getMarkerUrl","size","url","startsWith","newIcon","_createMarkerIcon","setIcon","layer2","getElement","styleOption","charAt","slice","setIconOptions","setNewMarker","_getDefaultMarkerColor","getDefaultMarkerForColor","_ensureMarkerIcon","getIconOptions","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","Medium","Large","IconOptions_1","Size_1","getMarkerUrl","divIcon","html","getMarkerHtml","FormElementOptions","FormElement","uiElement","createTitle","createContent","showForm","showElement","hideElement","layers","Layer","getLayers","parentForm","Form","formElements","styleFormKeys","formElement","initializedElements","hideFormElements","hideForm","preShow","showFormElements","currentElemnt","showFormElement","FormElement_1","ColorElement","colorPickerDiv","_getColorRamp","_setSelectCallback","elem","backgroundColor","_selectColor","PopupContentElement","textArea","descTextAreaField","_setStyle","selectedElement","popupContent","inputText","marker","getPopup","bindPopup","popup1","setContent","Form_1","GeometryForm_1","MarkerForm_1","ColorElement_1","DashElement_1","OpacityElement_1","PopupContentElement_1","WeightElement_1","fill","DashElement","stroke","backgroundPosition","OpacityFormElement","label","slider","max","String","min","step","getStyle","innerText","WeigthElement","weight","IconElement_1","SizeElement_1","IconElement","arguments","_selectOptionWrapperClasses","_selectOptionClasses","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","_styleSelectInputImage","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","createSelectHTML","setAttribute","selectOptions","selectOptionWrapper","selectOption","selectImage","nodeName","parentElement","_selectMarker","currentColorElement","_getCurrentColorElement","_getValue","SizeElement","select","styleEditorOptions","small","medium","large"],"mappings":"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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst StyleEditorClass_1 = require(\"./StyleEditorClass\");\nconst StyleEditorControl_1 = require(\"./StyleEditorControl\");\nrequire('../css/Leaflet.StyleEditor.css');\nL.StyleEditor = StyleEditorClass_1.StyleEditorClass;\nL.styleEditor = function () { return new StyleEditorClass_1.StyleEditorClass(); };\nL.Control.StyleEditor = StyleEditorControl_1.StyleEditorControl;\nL.control.styleEditor = function (options) { return new StyleEditorControl_1.StyleEditorControl(options); };\nexports.default = L;\n","module.exports = undefined;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass StyleEditorClass extends L.Class {\n}\nexports.StyleEditorClass = StyleEditorClass;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst StyleForm_1 = require(\"./StyleForm\");\nconst marker_1 = require(\"./marker\");\nconst form_1 = require(\"./form\");\nconst _1 = __importDefault(require(\".\"));\nconst Util_1 = require(\"./Util\");\nconst DefaultOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markerType: marker_1.DefaultMarker,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    markerForm: form_1.MarkerForm,\n    geometryForm: form_1.GeometryForm,\n    ignoreLayerTypes: [],\n    forms: {},\n    events: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        cancel: 'Cancel',\n        cancelTitle: 'Cancel Styling',\n        tooltip: 'Click on the element you want to style',\n        tooltipNext: 'Choose another element you want to style'\n    },\n    useGrouping: true,\n    styleEditorEventPrefix: 'styleeditor:',\n};\nclass StyleEditorControl extends _1.default.Control {\n    constructor(options) {\n        const opt = Object.assign(Object.assign({}, DefaultOptions), options);\n        super(opt);\n        this.options = opt;\n    }\n    onAdd(map) {\n        // create Control element\n        Util_1.Util.createInstance(map, this.options);\n        const controlUI = this.controlUI = _1.default.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        const controlDiv = _1.default.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlUI);\n        controlDiv.title = 'Style Editor';\n        const cancelUI = this.cancelUI = _1.default.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlUI);\n        cancelUI.innerHTML = this.options.strings.cancel;\n        cancelUI.title = this.options.strings.cancelTitle;\n        const editorUI = this.editorUI = _1.default.DomUtil.create('div', 'leaflet-styleeditor', map.getContainer());\n        const styleEditorHeader = _1.default.DomUtil.create('div', 'leaflet-styleeditor-header', editorUI);\n        const styleEditorInterior = _1.default.DomUtil.create('div', 'leaflet-styleeditor-interior', editorUI);\n        const buttonNext = _1.default.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-nextBtn', styleEditorHeader);\n        buttonNext.title = this.options.strings.tooltipNext;\n        const tooltipWrapper = _1.default.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', map.getContainer());\n        const tooltip = this.tooltipUI = _1.default.DomUtil.create('div', 'leaflet-styleeditor-tooltip', tooltipWrapper);\n        tooltip.innerHTML = this.options.strings.tooltip;\n        // do not propagate scrolling events on the ui to the map\n        _1.default.DomEvent.disableScrollPropagation(controlUI);\n        _1.default.DomEvent.disableScrollPropagation(editorUI);\n        _1.default.DomEvent.disableScrollPropagation(controlUI);\n        _1.default.DomEvent.disableScrollPropagation(cancelUI);\n        _1.default.DomEvent.disableScrollPropagation(buttonNext);\n        // do not propagate click events on the ui to the map\n        _1.default.DomEvent.disableClickPropagation(controlUI);\n        _1.default.DomEvent.disableClickPropagation(editorUI);\n        _1.default.DomEvent.disableClickPropagation(controlUI);\n        _1.default.DomEvent.disableClickPropagation(cancelUI);\n        _1.default.DomEvent.disableClickPropagation(buttonNext);\n        // toggle UI visibility\n        _1.default.DomEvent.on(controlUI, 'click', this.toggle);\n        // select next layer to style\n        _1.default.DomEvent.on(buttonNext, 'click', this.onNext);\n        this.addEventListeners(map);\n        new StyleForm_1.StyleForm(map, editorUI, styleEditorInterior, new this.options.markerForm(), new this.options.geometryForm());\n        return controlUI;\n    }\n    addEventListeners(map) {\n        this.options.events.forEach(event => map.on(event, this.onEvent));\n    }\n    onEvent(event) {\n        // TODO\n    }\n    onNext(event) {\n        this.hideEditor();\n        if (_1.default.DomUtil.hasClass(this.controlUI, 'enabled')) {\n            this.showTooltip();\n        }\n        event.stopPropagation();\n    }\n    toggle() {\n        if (_1.default.DomUtil.hasClass(this.controlUI, 'enabled')) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        _1.default.DomUtil.addClass(this.controlUI, 'enabled');\n        this.map.eachLayer(this.addEditClickEvents, this);\n        this.showCancelButton();\n        this.showTooltip();\n        if (layer !== undefined) {\n            if (this.isEnabled()) {\n                this.removeIndicators();\n            }\n            //this.initChangeStyle({ target: layer })\n        }\n    }\n    removeIndicators() {\n        const children = this.map.getPanes().markerPane.children;\n        for (let index = 0; index < children.length; index++) {\n            const element = children[index];\n            _1.default.DomUtil.removeClass(element, 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    addEditClickEvents(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof _1.default.LayerGroup) {\n            //this.options._layerGroups.push(layer)\n        }\n        else if (layer instanceof _1.default.Marker || layer instanceof _1.default.Path) {\n            //let evt = layer.on('click', this.initChangeStyle, this)\n            //this.options._editLayers.push(evt)\n        }\n    }\n    layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n    isEnabled() {\n        return _1.default.DomUtil.hasClass(this.controlUI, 'enabled');\n    }\n    disable() {\n        if (this.isEnabled()) {\n            /*      this.options._editLayers.forEach(this.removeEditClickEvents, this)\n                  this.options._editLayers = []\n                  this.options._layerGroups = [] */\n            this.hideEditor();\n            this.hideCancelButton();\n            this.hideTooltip();\n            _1.default.DomUtil.removeClass(this.controlUI, 'enabled');\n        }\n    }\n    hideEditor() {\n        if (_1.default.DomUtil.hasClass(this.controlUI, 'editor-enabled')) {\n            this.removeIndicators();\n            _1.default.DomUtil.removeClass(this.controlUI, 'editor-enabled');\n            this.fireEvent('hidden');\n        }\n    }\n    showCancelButton() {\n        _1.default.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    hideCancelButton() {\n        _1.default.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    showEditor() {\n        if (!_1.default.DomUtil.hasClass(this.controlUI, 'editor-enabled')) {\n            _1.default.DomUtil.addClass(this.controlUI, 'editor-enabled');\n            this.fireEvent('visible');\n        }\n    }\n    showTooltip() {\n        _1.default.DomUtil.addClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    hideTooltip() {\n        _1.default.DomUtil.removeClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    fireEvent(eventName) {\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = require(\"./Util\");\nclass StyleForm {\n    constructor(map, styleEditorDiv, styleEditorInterior, markerForm, geometryForm) {\n        this.util = Util_1.Util.getInstance();\n        this.map = map;\n        this.styleEditorDiv = styleEditorDiv;\n        this.styleEditorInterior = styleEditorInterior;\n        this.markerForm = markerForm;\n        this.geometryForm = geometryForm;\n        this.createMarkerForm();\n        this.createGeometryForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        L.DomEvent.addListener(this.map, 'click', this.lostFocus, this);\n        L.DomEvent.addListener(this.styleEditorDiv, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.markerForm.hide();\n        this.geometryForm.hide();\n    }\n    createMarkerForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.styleEditorInterior);\n        this.markerForm.create(markerDiv);\n    }\n    createGeometryForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.styleEditorInterior);\n        this.geometryForm.create(markerDiv);\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.markerForm.lostFocus();\n        this.geometryForm.lostFocus();\n    }\n}\nexports.StyleForm = StyleForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper functions used throuhgout the project\n */\nclass UtilOptions {\n}\nexports.UtilOptions = UtilOptions;\nclass Util {\n    constructor(map, options) {\n        this.map = map;\n        this.options = options;\n    }\n    static createInstance(map, options) {\n        Util.instance = new Util(map, options);\n    }\n    static getInstance() {\n        return Util.instance;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.map.fireEvent(this.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n            this._componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get element selected to be styled */\n    getCurrentElement() {\n        /**if (!this.styleEditor.currentElement) {\n          return null\n        }\n        if (this.styleEditor.currentElement.target !== undefined) {\n          return this.styleEditor.currentElement.target\n        }\n        return this.styleEditor.currentElement */\n    }\n    /** set which element is selected to be styled */\n    setCurrentElement(currentElement) {\n        /*this.styleEditor.currentElement.target = currentElement*/\n    }\n    /** get current style of current element */\n    getStyle(currentElement, option) {\n        let style = currentElement.options[option];\n        if (style) {\n            return style;\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(currentElement, option, value) {\n        if (currentElement instanceof L.Marker) {\n            //this.styleEditor.options.markerType.setStyle(currentElement, option, value)\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    _componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getMarkersForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = []; // TODOthis.styleEditor.options.markerType.options.markers\n        let controlMarkers = []; // TODO this.styleEditor.options.markers\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getMarkersForColor(color);\n        let defMarkers = [];\n        let defaultMarker = undefined; //TODO this.styleEditor.options.defaultMarkerIcon\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = undefined; // TODO this.styleEditor.options.markerType.options.defaultMarkerIcon\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n}\nexports.Util = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Marker_1 = require(\"./Marker\");\nexports.Marker = Marker_1.Marker;\nconst DefaultMarker_1 = require(\"./DefaultMarker\");\nexports.DefaultMarker = DefaultMarker_1.DefaultMarker;\nconst GlyphiconMarker_1 = require(\"./GlyphiconMarker\");\nexports.GlyphiconMarker = GlyphiconMarker_1.GlyphiconMarker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Marker_1 = require(\"./Marker\");\nconst types_1 = require(\"../types\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends Marker_1.Marker {\n    constructor() {\n        super();\n    }\n    createMarkerIcon(iconOptions, iconClass) {\n        if (!iconClass) {\n            iconClass = '';\n        }\n        let iconSize = iconOptions.iconSize;\n        return new L.Icon({\n            iconUrl: this._getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize.dimen,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: iconClass,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        let tmpOptions = new types_1.IconOptions(types_1.Size.Small, icon, iconOptions.iconColor);\n        parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions, this.options.selectIconClass).createIcon().outerHTML;\n    }\n    _getMarkerUrlForStyle(iconOptions) {\n        return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    _getMarkerUrl(size, color, icon) {\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size.name;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\nconst markers = [\n    'circle-stroked',\n    'circle',\n    'square-stroked',\n    'square',\n    'triangle-stroked', 'triangle',\n    'star-stroked',\n    'star',\n    'cross',\n    'marker-stroked',\n    'marker',\n    'religious-jewish',\n    'religious-christian',\n    'religious-muslim',\n    'cemetery',\n    'rocket',\n    'airport',\n    'heliport',\n    'rail',\n    'rail-metro',\n    'rail-light',\n    'bus',\n    'fuel',\n    'parking',\n    'parking-garage',\n    'airfield',\n    'roadblock',\n    'ferry',\n    'harbor',\n    'bicycle',\n    'park',\n    'park2',\n    'museum',\n    'lodging',\n    'monument',\n    'zoo',\n    'garden',\n    'campsite',\n    'theatre',\n    'art-gallery',\n    'pitch',\n    'soccer',\n    'america-football',\n    'tennis',\n    'basketball',\n    'baseball',\n    'golf',\n    'swimming',\n    'cricket',\n    'skiing',\n    'school',\n    'college',\n    'library',\n    'post',\n    'fire-station',\n    'town-hall',\n    'police',\n    'prison',\n    'embassy',\n    'beer',\n    'restaurant',\n    'cafe',\n    'shop',\n    'fast-food',\n    'bar',\n    'bank',\n    'grocery',\n    'cinema',\n    'pharmacy',\n    'hospital',\n    'danger',\n    'industrial',\n    'warehouse',\n    'commercial',\n    'building',\n    'place-of-worship',\n    'alcohol-shop',\n    'logging',\n    'oil-well',\n    'slaughterhouse',\n    'dam',\n    'water',\n    'wetland',\n    'disability',\n    'telephone',\n    'emergency-telephone',\n    'toilets',\n    'waste-basket',\n    'music',\n    'land-use',\n    'city',\n    'town',\n    'village',\n    'farm',\n    'bakery',\n    'dog-park',\n    'lighthouse',\n    'clothing-store',\n    'polling-place',\n    'playground',\n    'entrance',\n    'heart',\n    'london-underground',\n    'minefield',\n    'rail-underground',\n    'rail-above',\n    'camera',\n    'laundry',\n    'car',\n    'suitcase',\n    'hairdresser',\n    'chemist',\n    'mobilephone',\n    'scooter'\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = require(\"../Util\");\nconst types_1 = require(\"../types\");\n/**\n * The Base class for different markers\n */\nclass Marker {\n    constructor() {\n        this.util = Util_1.Util.getInstance();\n        if (this.options.selectIconClass !== '' && !this.options.selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n            this.options.selectIconClass = 'leaflet-styleeditor-select-image-' + this.options.selectIconClass;\n        }\n    }\n    /** create new Marker and show it */\n    setNewMarker(currentElement) {\n        let newIcon = this._createMarkerIcon(currentElement);\n        currentElement = currentElement.target;\n        currentElement.setIcon(newIcon);\n        if (currentElement instanceof L.LayerGroup) {\n            currentElement.eachLayer(function (layer) {\n                const layer2 = layer; // TODO find out where getElement comes from…\n                L.DomUtil.addClass(layer2.getElement(), 'leaflet-styleeditor-marker-selected');\n            });\n        }\n        else {\n            L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    /** set styling options */\n    setStyle(currentElement, styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setIconOptions(currentElement, styleOption, value);\n        this.setNewMarker(currentElement);\n    }\n    /** create HTML used to */\n    createSelectHTML(parentUiElement, iconOptions, icon) { }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions(currentElement) {\n        try {\n            this.options.iconOptions = currentElement.target.options.icon.options;\n        }\n        catch (e) {\n            // if a new marker is created it may be the currentItem is still set, but is no marker\n        }\n        if (Object.keys(this.options.iconOptions).length > 0) {\n            return this.options.iconOptions;\n        }\n        this.options.iconOptions.iconColor = this._getDefaultMarkerColor();\n        this.options.iconOptions.iconSize = types_1.Size.Small;\n        this.options.iconOptions.icon = this.util.getDefaultMarkerForColor(this.options.iconOptions.iconColor);\n        this.options.iconOptions = this._ensureMarkerIcon(this.options.iconOptions);\n        return this.options.iconOptions;\n    }\n    resetIconOptions(currentElement) {\n        Object.keys(this.getIconOptions(currentElement)).forEach((key) => this.setStyle(currentElement, key, this.options.iconOptions[key]));\n    }\n    setIconOptions(currentElement, key, value) {\n        let iconOptions = this.getIconOptions(currentElement);\n        iconOptions[key] = value;\n    }\n    /** call createMarkerIcon with the correct iconOptions */\n    _createMarkerIcon(currentElement) {\n        let iconOptions = this.getIconOptions(currentElement);\n        return this.createMarkerIcon(iconOptions);\n    }\n    createMarkerIcon(iconOptions, iconClass) { }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getMarkersForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.options.colorRamp;\n        let generalColorRamp = [\"#000\"]; // TODO this.styleEditor.options.colorRamp\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = \"#000\"; //TOOD this.styleEditor.options.defaultMarkerColor\n        if (color !== null && intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = \"#000\"; // TODO this.styleEditor.options.defaultColor\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IconOptions {\n    constructor(iconSize, icon, iconColor) {\n        this.iconSize = iconSize;\n        this.icon = icon;\n        this.iconColor = iconColor;\n    }\n}\nexports.IconOptions = IconOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Size {\n    constructor(name, dimen) {\n        this.name = name;\n        this.dimen = dimen;\n    }\n}\nexports.Size = Size;\nSize.Small = new Size('small', [20, 50]);\nSize.Medium = new Size('medium', [30, 70]);\nSize.Large = new Size('large', [35, 90]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IconOptions_1 = require(\"./IconOptions\");\nexports.IconOptions = IconOptions_1.IconOptions;\nconst Size_1 = require(\"./Size\");\nexports.Size = Size_1.Size;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = require(\".\");\nconst types_1 = require(\"../types\");\n/**\n * Example class showing how to implement new MarkerClasses\n * uses the glyphicons given by bootstrap\n */\nclass GlyphiconMarker extends _1.Marker {\n    constructor() {\n        super();\n        this.options.markers = markers;\n    }\n    getMarkerHtml(size, color, icon) {\n        let iconUrl = this.getMarkerUrl(size, color);\n        return '<div class=\"leaflet-styleeditor-marker leaflet-styleeditor-marker-' +\n            size.name + '\" ' +\n            'style=\"background-image: url(' + iconUrl + ');\">' +\n            '<div class=\"leaflet-styleeditor-fill\"></div>' +\n            '<i class=\"glyphicon ' + icon + '\"></i>' +\n            '<div class=\"leaflet-styleeditor-fill\"></div>' +\n            '</div>';\n    }\n    createMarkerIcon(iconOptions) {\n        let iconSize = iconOptions.iconSize;\n        return L.divIcon({\n            className: 'leaflet-styleeditor-glyphicon-marker-wrapper',\n            html: this.getMarkerHtml(iconSize, iconOptions.iconColor, iconOptions.icon),\n            //icon: iconOptions.icon,\n            //iconColor: iconOptions.iconColor,\n            iconSize: iconSize.dimen,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    setStyle(currentElement, styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        let iconOptions = this.options.iconOptions;\n        if (iconOptions[styleOption] !== value) {\n            iconOptions[styleOption] = value;\n            this.setNewMarker(currentElement);\n        }\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        parentUiElement.innerHTML = this.getMarkerHtml(types_1.Size.Small, iconOptions.iconColor, icon);\n    }\n    _getMarkerUrlForStyle(iconOptions) {\n        return this.getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor);\n    }\n    getMarkerUrl(size, color) {\n        // TODO move to Color\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size;\n        return url + '+' + color + '.png';\n    }\n}\nexports.GlyphiconMarker = GlyphiconMarker;\nconst markers = [\n    'glyphicon-plus',\n    'glyphicon-asterisk',\n    'glyphicon-plus',\n    'glyphicon-euro',\n    'glyphicon-minus',\n    'glyphicon-cloud',\n    'glyphicon-envelope',\n    'glyphicon-pencil',\n    'glyphicon-glass',\n    'glyphicon-music',\n    'glyphicon-search',\n    'glyphicon-heart',\n    'glyphicon-star',\n    'glyphicon-star-empty',\n    'glyphicon-user',\n    'glyphicon-film',\n    'glyphicon-th-large',\n    'glyphicon-th',\n    'glyphicon-th-list',\n    'glyphicon-ok',\n    'glyphicon-remove',\n    'glyphicon-zoom-in',\n    'glyphicon-zoom-out',\n    'glyphicon-off',\n    'glyphicon-signal',\n    'glyphicon-cog',\n    'glyphicon-trash',\n    'glyphicon-home',\n    'glyphicon-file',\n    'glyphicon-time',\n    'glyphicon-road',\n    'glyphicon-download-alt',\n    'glyphicon-download',\n    'glyphicon-upload',\n    'glyphicon-inbox',\n    'glyphicon-play-circle',\n    'glyphicon-repeat',\n    'glyphicon-refresh',\n    'glyphicon-list-alt',\n    'glyphicon-lock',\n    'glyphicon-flag',\n    'glyphicon-headphones',\n    'glyphicon-volume-off',\n    'glyphicon-volume-down',\n    'glyphicon-volume-up',\n    'glyphicon-qrcode',\n    'glyphicon-barcode',\n    'glyphicon-tag',\n    'glyphicon-tags',\n    'glyphicon-book',\n    'glyphicon-bookmark',\n    'glyphicon-print',\n    'glyphicon-camera',\n    'glyphicon-font',\n    'glyphicon-bold',\n    'glyphicon-italic',\n    'glyphicon-text-height',\n    'glyphicon-text-width',\n    'glyphicon-align-left',\n    'glyphicon-align-center',\n    'glyphicon-align-right',\n    'glyphicon-align-justify',\n    'glyphicon-list',\n    'glyphicon-indent-left',\n    'glyphicon-indent-right',\n    'glyphicon-facetime-video',\n    'glyphicon-picture',\n    'glyphicon-map-marker',\n    'glyphicon-adjust',\n    'glyphicon-tint',\n    'glyphicon-edit',\n    'glyphicon-share',\n    'glyphicon-check',\n    'glyphicon-move',\n    'glyphicon-chevron-right',\n    'glyphicon-plus-sign',\n    'glyphicon-minus-sign',\n    'glyphicon-remove-sign',\n    'glyphicon-ok-sign',\n    'glyphicon-question-sign',\n    'glyphicon-info-sign',\n    'glyphicon-screenshot',\n    'glyphicon-remove-circle',\n    'glyphicon-ok-circle',\n    'glyphicon-ban-circle',\n    'glyphicon-arrow-left',\n    'glyphicon-arrow-right',\n    'glyphicon-arrow-up',\n    'glyphicon-arrow-down',\n    'glyphicon-share-alt',\n    'glyphicon-resize-full',\n    'glyphicon-resize-small',\n    'glyphicon-exclamation-sign',\n    'glyphicon-gift',\n    'glyphicon-leaf',\n    'glyphicon-fire',\n    'glyphicon-eye-open',\n    'glyphicon-eye-close',\n    'glyphicon-warning-sign',\n    'glyphicon-plane',\n    'glyphicon-calendar',\n    'glyphicon-random',\n    'glyphicon-comment',\n    'glyphicon-magnet',\n    'glyphicon-chevron-up',\n    'glyphicon-chevron-down',\n    'glyphicon-retweet',\n    'glyphicon-shopping-cart',\n    'glyphicon-bullhorn',\n    'glyphicon-bell',\n    'glyphicon-certificate',\n    'glyphicon-thumbs-up',\n    'glyphicon-thumbs-down',\n    'glyphicon-hand-right',\n    'glyphicon-hand-left',\n    'glyphicon-hand-up',\n    'glyphicon-hand-down',\n    'glyphicon-circle-arrow-right',\n    'glyphicon-circle-arrow-left',\n    'glyphicon-circle-arrow-up',\n    'glyphicon-circle-arrow-down',\n    'glyphicon-globe',\n    'glyphicon-wrench',\n    'glyphicon-tasks',\n    'glyphicon-filter',\n    'glyphicon-briefcase',\n    'glyphicon-fullscreen',\n    'glyphicon-dashboard',\n    'glyphicon-paperclip',\n    'glyphicon-heart-empty',\n    'glyphicon-link',\n    'glyphicon-phone',\n    'glyphicon-pushpin',\n    'glyphicon-usd'\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = require(\"../Util\");\nclass FormElementOptions {\n}\nexports.FormElementOptions = FormElementOptions;\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement {\n    constructor(options) {\n        this.util = Util_1.Util.getInstance();\n        if (options.title === undefined) {\n            options.title = options.styleOption.charAt(0).toUpperCase() + options.styleOption.slice(1);\n        }\n        this.options = options;\n        this.create(options.parentUiElement, options.title);\n    }\n    /** create uiElement and content */\n    create(parentUiElement, title) {\n        this.uiElement =\n            L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle(title);\n        this.createContent();\n    }\n    /** create title */\n    createTitle(title) {\n        let titleUiElement = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.uiElement);\n        titleUiElement.innerHTML = title + ':';\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show() {\n        //this.style(currentElement)\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.uiElement);\n    }\n    /** style the FormElement */\n    style(currentElement) {\n    }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(currentElement, value) {\n        // check whether a layer is part of a layerGroup\n        let layers = L.Layer[currentElement];\n        if (currentElement instanceof L.LayerGroup) {\n            layers = currentElement.getLayers;\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof L.Marker) {\n                //TODO layer.setStyle(currentElement, this.options.styleOption, value)\n            }\n            else {\n                let newStyle = {};\n                newStyle[this.options.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.options.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.options.parentForm.style(currentElement);\n    }\n}\nexports.FormElement = FormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = require(\"../Util\");\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form {\n    constructor(parentUiElement, formElements, options) {\n        this.util = Util_1.Util.getInstance();\n        this.create(parentUiElement, formElements, options);\n    }\n    create(parentUiElement, formElements, options) {\n        let styleFormKeys = Object.keys(formElements);\n        for (let i = 0; i < styleFormKeys.length; i++) {\n            let formElement = new formElements[styleFormKeys[i]](options);\n            if (formElement !== undefined) {\n                formElement.create(parentUiElement, styleFormKeys[i]);\n                this.initializedElements.push(formElement);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let i = 0; i < this.initializedElements.length; i++) {\n            this.initializedElements[i].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show(currentElement) {\n        this.style(currentElement);\n        this.preShow();\n        this.showFormElements(currentElement);\n        this.showForm();\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() { }\n    /** make every FormElement visible */\n    showFormElements(currentElemnt) {\n        for (let i = 0; i < this.initializedElements.length; i++) {\n            this.showFormElement(this.initializedElements[i]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style(currentElemnt) {\n        for (let i = 0; i < this.initializedElements.length; i++) {\n            this.initializedElements[i].style(currentElemnt);\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let i = 0; i < this.initializedElements.length; i++) {\n            this.initializedElements[i].lostFocus();\n        }\n    }\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement(formElement) {\n        // check wether element should be shown or not\n        // TODO make hideable if (this.showFormElementForStyleOption(formElement.options.styleOption)) {\n        formElement.show();\n        /* } else {\n          formElement.hide()\n        }*/\n    }\n}\nexports.Form = Form;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\nconst DefaultOptions = {\n    colorRamp: ['#fff']\n};\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.FormElement {\n    constructor(options) {\n        super(Object.assign(Object.assign({}, DefaultOptions), options));\n    }\n    createContent() {\n        this.options.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.options.parentUiElement);\n        this._getColorRamp().forEach(this._setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    _getColorRamp() {\n        /* TODO\n        if (!this.options.colorRamp) {\n          // if markers have own colorRamp use it\n          if (this.options.parentForm instanceof MarkerForm && !!this.styleEditor.options.markerType.options.colorRamp) {\n            this.options.colorRamp = this.styleEditor.options.markerType.options.colorRamp\n            // else use the default\n          } else {\n            this.options.colorRamp = this.styleEditor.options.colorRamp\n          }\n        }*/\n        return this.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    _setSelectCallback(color) {\n        let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.options.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        L.DomEvent.addListener(elem, 'click', this._selectColor, this);\n    }\n    /** set style for chosen color */\n    _selectColor(e) {\n        e.stopPropagation();\n        this.setStyle(e.target, this.util.rgbToHex(e.target.style.backgroundColor));\n        // marker styling needs additional function calls\n        if (e.target instanceof L.Marker) {\n            // TODO this.styleEditor.options.markerType.setNewMarker(e)\n        }\n    }\n}\nexports.default = ColorElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends FormElement_1.FormElement {\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let textArea = this.options.descTextAreaField = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', uiElement);\n        L.DomEvent.addListener(textArea, 'change', this._setStyle, this);\n    }\n    /** set correct value */\n    style(selectedElement) {\n        if (selectedElement && selectedElement.options) {\n            this.options.descTextAreaField.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    _setStyle(currentElement) {\n        let inputText = this.options.descTextAreaField.value;\n        // check whether a layer is part of a layerGroup\n        let layers = [currentElement];\n        if (currentElement instanceof L.LayerGroup) {\n            layers = currentElement.getLayers();\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let marker = layers[i];\n            if (marker && marker.getPopup && marker.bindPopup) {\n                let popup1 = marker.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    marker.bindPopup(inputText);\n                }\n                /*// tmp store the text content for init next time\n                marker.options = marker.options || {}\n                marker.options.popupContent = inputText\n                TODO*/\n            }\n        }\n        this.setStyle(currentElement, inputText);\n    }\n}\nexports.default = PopupContentElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = require(\"./Form\");\nexports.Form = Form_1.Form;\nconst GeometryForm_1 = require(\"./GeometryForm\");\nexports.GeometryForm = GeometryForm_1.GeometryForm;\nconst MarkerForm_1 = __importDefault(require(\"./MarkerForm\"));\nexports.MarkerForm = MarkerForm_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = require(\"./Form\");\nconst ColorElement_1 = __importDefault(require(\"../formElements/ColorElement\"));\nconst DashElement_1 = __importDefault(require(\"../formElements/DashElement\"));\nconst OpacityElement_1 = __importDefault(require(\"../formElements/OpacityElement\"));\nconst PopupContentElement_1 = __importDefault(require(\"../formElements/PopupContentElement\"));\nconst WeightElement_1 = __importDefault(require(\"../formElements/WeightElement\"));\n/** Form used to enable modification of a Geometry */\nclass GeometryForm extends Form_1.Form {\n    constructor(parentUiElement, options) {\n        super(parentUiElement, {\n            'color': ColorElement_1.default,\n            'opacity': OpacityElement_1.default,\n            'weight': WeightElement_1.default,\n            'dashArray': DashElement_1.default,\n            'fillColor': ColorElement_1.default,\n            'fillOpacity': OpacityElement_1.default,\n            'popupContent': PopupContentElement_1.default\n        }, options);\n    }\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElements(currentElement) {\n        for (let i = 0; i < this.initializedElements.length; i++) {\n            if (this.initializedElements[i].options.styleOption.indexOf('fill') === 0) {\n                if (currentElement.options.fill) {\n                    this.showFormElement(this.initializedElements[i]);\n                }\n                else {\n                    this.initializedElements[i].hide();\n                }\n            }\n            else {\n                this.showFormElement(this.initializedElements[i]);\n            }\n        }\n    }\n}\nexports.GeometryForm = GeometryForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends FormElement_1.FormElement {\n    /** create the three standard dash options */\n    createContent() {\n        let uiElement = this.options.parentUiElement;\n        let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -115px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.default = DashElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used to style opacity\n */\nclass OpacityFormElement extends FormElement_1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.parentUiElement);\n        let slider = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.parentUiElement);\n        slider.type = 'range';\n        slider.max = String(1);\n        slider.min = String(0);\n        slider.step = String(0.01);\n        slider.value = String(0.5);\n        // add event listeners\n        L.DomEvent.addListener(slider, 'change', this._setStyle, this);\n        L.DomEvent.addListener(slider, 'input', this._setStyle, this);\n        L.DomEvent.addListener(slider, 'keyup', this._setStyle, this);\n        L.DomEvent.addListener(slider, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style(currentElement) {\n        this.options.slider.value = this.util.getStyle(currentElement, this.options.styleOption);\n        this.options.label.innerText = 100 * parseInt(this.options.slider.value) + '%';\n    }\n    /** communicate opacity value */\n    _setStyle(currentElement) {\n        this.setStyle(currentElement, this.options.slider.value);\n    }\n}\nexports.default = OpacityFormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used to style weight\n */\nclass WeigthElement extends FormElement_1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.options.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.parentUiElement);\n        let weight = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.parentUiElement);\n        weight.type = 'range';\n        weight.min = String(0);\n        weight.max = String(20);\n        weight.step = String(1);\n        weight.value = String(4);\n        this.options.weight = weight;\n        // add event listeners\n        L.DomEvent.addListener(weight, 'change', this._setStyle, this);\n        L.DomEvent.addListener(weight, 'input', this._setStyle, this);\n        L.DomEvent.addListener(weight, 'keyup', this._setStyle, this);\n        L.DomEvent.addListener(weight, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.options.weight.value = this.util.getStyle(undefined, this.options.styleOption); // TODO Remove undefined\n        this.options.label.innerText = this.options.weight.value;\n    }\n    /** communicate weight value */\n    _setStyle(currentElement) {\n        this.setStyle(currentElement, this.options.weight.value);\n    }\n}\nexports.default = WeigthElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = require(\"./Form\");\nconst IconElement_1 = __importDefault(require(\"../formElements/IconElement\"));\nconst ColorElement_1 = __importDefault(require(\"../formElements/ColorElement\"));\nconst SizeElement_1 = __importDefault(require(\"../formElements/SizeElement\"));\nconst PopupContentElement_1 = __importDefault(require(\"../formElements/PopupContentElement\"));\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends Form_1.Form {\n    constructor(parentUiElement, options) {\n        super(parentUiElement, {\n            'icon': IconElement_1.default,\n            'color': ColorElement_1.default,\n            'size': SizeElement_1.default,\n            'popupContent': PopupContentElement_1.default\n        }, options);\n    }\n}\nexports.default = MarkerForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends FormElement_1.FormElement {\n    constructor() {\n        super(...arguments);\n        // private classed used in the code\n        this._selectOptionWrapperClasses = 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden';\n        this._selectOptionClasses = 'leaflet-styleeditor-select-option';\n    }\n    /** create the icon selectBoxes */\n    createContent() {\n        let uiElement = this.options.parentUiElement;\n        let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', uiElement);\n        this.options.selectBoxImage = this._createSelectInputImage(selectBox);\n        L.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style(currentElement) {\n        let iconOptions = this.options.markerType.getIconOptions(currentElement);\n        this._styleSelectInputImage(currentElement, this.options.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this._createColorSelect(this.options.markerType.options.iconOptions.iconColor);\n        this._hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this._hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage(parentUiElement) {\n        let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage(currentElement, image, icon, color) {\n        if (!icon) {\n            icon = image.getAttribute('value');\n            if (!icon) {\n                return;\n            }\n        }\n        let iconOptions = this.options.markerType.getIconOptions(currentElement);\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        image.innerHTML = '';\n        this.options.markerType.createSelectHTML(image, iconOptions, icon);\n        image.setAttribute('value', icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect(color) {\n        if (!this.options.selectOptions) {\n            this.options.selectOptions = {};\n        }\n        if (color in this.options.selectOptions) {\n            return;\n        }\n        let uiElement = this.options.parentUiElement;\n        let selectOptionWrapper = L.DomUtil.create('ul', this._selectOptionWrapperClasses, uiElement);\n        this.util.getMarkersForColor(color).forEach(function (option) {\n            let selectOption = L.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper);\n            let selectImage = this._createSelectInputImage(selectOption);\n            this._styleSelectInputImage(selectImage, option, color);\n        }, this);\n        this.options.selectOptions[color] = selectOptionWrapper;\n        L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            if (target.parentElement.className === 'leaflet-styleeditor-select-image') {\n                target = target.parentElement;\n            }\n            else {\n                while (target && target.className !== 'leaflet-styleeditor-select-image') {\n                    target = target.children[0];\n                }\n            }\n            this._selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    _toggleSelectInput(e) {\n        let currentColorElement = this._getCurrentColorElement(this.util.rgbToHex(this.options.markerType.options.iconOptions.iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this._hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    _selectMarker(e) {\n        let value = this._getValue(e.target);\n        // update style\n        this.options.selectBoxImage.setAttribute('value', value);\n        this.setStyle(e.target, value);\n        this._hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    _getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement(color) {\n        if (!this.options.selectOptions[color]) {\n            this._createColorSelect(color);\n        }\n        return this.options.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    _hideSelectOptions() {\n        for (let selectOption in this.options.selectOptions) {\n            this.util.hideElement(this.options.selectOptions[selectOption]);\n        }\n    }\n}\nexports.default = IconElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends FormElement_1.FormElement {\n    /** create the 3 standard icon sizes */\n    createContent() {\n        let uiElement = this.options.parentUiElement;\n        let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.small);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.large);\n        }, this);\n    }\n}\nexports.default = SizeElement;\n"],"sourceRoot":""}