{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/types/index.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/DashElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/OpacityElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/PopupContentElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/WeightElement.ts","webpack://leafletstyleeditor/./src/typescript/Control.ts","webpack://leafletstyleeditor/./src/typescript/index.js","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/types/IconOptions.ts","webpack://leafletstyleeditor/./src/typescript/types/Size.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/form/GeometryForm.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/formElements/IconElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/SizeElement.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditor.ts","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","undefined","__importDefault","this","mod","leaflet_1","Util_1","default","util","getInstance","parentUiElement","options","uiElement","DomUtil","createTitle","createContent","innerHTML","title","currentElement","style","showForm","showElement","hideElement","getCurrentElement","layers","Layer","LayerGroup","getLayers","length","layer","Marker","newStyle","styleOption","setStyle","fireChangeEvent","parentForm","Util","styleEditor","instance","eventName","element","map","fireEvent","styleEditorEventPrefix","addClass","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","target","fill","option","markerType","removeClass","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","keys","includes","filter","getMarkersForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","IconOptions_1","IconOptions","Size_1","Size","Form_1","Form","GeometryForm_1","GeometryForm","MarkerForm_1","MarkerForm","FormOptions","formElements","getFormElements","styleFormKeys","formElement","getFormElementClass","initializedElements","hideFormElements","hideForm","hide","preShow","showFormElements","showFormElement","lostFocus","showFormElementForStyleOption","show","FormElement","getFormElementStandardClass","formElementInstance","e","styleFormElement","err","FormElement_1","ColorElement","colorPickerDiv","_getColorRamp","forEach","_setSelectCallback","colorRamp","elem","backgroundColor","DomEvent","addListener","_selectColor","stopPropagation","DashElement","stroke","backgroundPosition","OpacityFormElement","label","slider","type","max","String","min","step","_setStyle","getStyle","innerText","PopupContentElement","textArea","descTextAreaField","selectedElement","popupContent","inputText","marker","getPopup","bindPopup","popup1","setContent","WeigthElement","weight","__importStar","result","k","DefaultMarker_1","StyleEditor_1","StyleForm_1","StyleEditorControl","Control","defaultOptions","super","StyleEditor","createUi","controlDiv","controlUI","cancelUI","strings","cancel","cancelTitle","styleEditorDiv","getContainer","styleEditorHeader","styleEditorInterior","addDomEvents","addEventListeners","addButtons","styleForm","disableScrollPropagation","disableClickPropagation","on","toggle","addLeafletDrawEvents","addLeafletEditableEvents","openOnLeafletDraw","Draw","onLayerAdd","Event","CREATED","onLayerCreated","openOnLeafletEditable","Editable","removeIndicators","enable","disable","removeDomEvents","removeEventListeners","remove","off","nextBtn","tooltipNext","hideEditor","hasClass","createTooltip","_layerIsIgnored","eachLayer","addEditClickEvents","showCancelButton","isEnabled","initChangeStyle","editLayers","removeEditClickEvents","layerGroups","hideCancelButton","removeTooltip","useGrouping","Path","evt","getElement","anything","editorDiv","getMatchingElement","addIndicators","showEditor","resetIconOptions","showMarkerForm","showGeometryForm","showTooltip","tooltipWrapper","tooltip","group","hasLayer","opacity","setIcon","icon","parentNode","ignoreLayerTypes","some","layerType","toUpperCase","position","defaultMarkerColor","forms","DefaultMarker","L","include","Polygon","Polyline","Rectangle","control","Marker_1","types_1","iconOptions","iconClass","iconSize","Icon","iconUrl","_getMarkerUrlForStyle","dimen","iconColor","className","iconAnchor","popupAnchor","tmpOptions","Small","createMarkerIcon","selectIconClass","createIcon","outerHTML","_getMarkerUrl","size","url","Medium","Large","form_1","markerForm","startsWith","newIcon","_createMarkerIcon","layer2","charAt","slice","setIconOptions","setNewMarker","_getDefaultMarkerColor","getDefaultMarkerForColor","_ensureMarkerIcon","getIconOptions","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","ColorElement_1","DashElement_1","OpacityElement_1","PopupContentElement_1","WeightElement_1","GeometryFormOptions","formOptionKey","arguments","fillCurrentElement","_1","IconElement_1","SizeElement_1","IconElement","_selectOptionWrapperClasses","_selectOptionClasses","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","_styleSelectInputImage","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","createSelectHTML","setAttribute","selectOptions","selectOptionWrapper","selectOption","selectImage","nodeName","parentElement","children","_selectMarker","currentColorElement","_getCurrentColorElement","_getValue","SizeElement","select","styleEditorOptions","small","medium","large","_editLayers","_layerGroups","geometryForm","createMarkerForm","createGeometryForm","addDOMEvents","markerDiv","clearForm","parent"],"mappings":"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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = undefined;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst Util_1 = __importDefault(require(\"../Util\"));\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement {\n    constructor() {\n        this.util = Util_1.default.getInstance();\n    }\n    /* TODO\n    // if no title is given use styling option\n    if(!this.options.title && !!this.options.styleOption) {\n    this.options.title = this.options.styleOption.charAt(0).toUpperCase() + this.options.styleOption.slice(1)\n  }*/\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.options.uiElement =\n            leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = leaflet_1.default.DomUtil.create('label', 'leaflet-styleeditor-label', this.options.uiElement);\n        title.innerHTML = this.options.title + ':';\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show(currentElement) {\n        this.style(currentElement);\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.options.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.options.uiElement);\n    }\n    /** style the FormElement */\n    style(currentElement) {\n    }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        let currentElement = this.util.getCurrentElement();\n        // check whether a layer is part of a layerGroup\n        let layers = leaflet_1.default.Layer[currentElement];\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            layers = currentElement.getLayers;\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof leaflet_1.default.Marker) {\n                //TODO layer.setStyle(currentElement, this.options.styleOption, value)\n            }\n            else {\n                let newStyle = {};\n                newStyle[this.options.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.options.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.options.parentForm.style();\n    }\n}\nexports.default = FormElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\n/**\n * Helper functions used throuhgout the project\n */\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n    }\n    static createInstance(styleEditor) {\n        Util.instance = new Util(styleEditor);\n    }\n    static getInstance() {\n        return Util.instance;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.styleEditor.map.fireEvent(this.styleEditor.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            leaflet_1.default.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.styleEditor.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n            this._componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get element selected to be styled */\n    getCurrentElement() {\n        if (!this.styleEditor.currentElement) {\n            return null;\n        }\n        if (this.styleEditor.currentElement.target !== undefined) {\n            return this.styleEditor.currentElement.target;\n        }\n        return this.styleEditor.currentElement;\n    }\n    /** set which element is selected to be styled */\n    setCurrentElement(currentElement) {\n        this.styleEditor.currentElement.target = currentElement;\n    }\n    /** does current element have the fill option */\n    fillCurrentElement() {\n        return this.getCurrentElement().options.fill;\n    }\n    /** get current style of current element */\n    getStyle(option) {\n        let currentElement = this.getCurrentElement();\n        let style = currentElement.options[option];\n        if (style) {\n            return style;\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(option, value) {\n        let currentElement = this.getCurrentElement();\n        if (currentElement instanceof leaflet_1.default.Marker) {\n            this.styleEditor.options.markerType.setStyle(currentElement, option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            leaflet_1.default.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    _componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getMarkersForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.styleEditor.options.markerType.options.markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getMarkersForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = this.styleEditor.options.markerType.options.defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n}\nexports.default = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IconOptions_1 = require(\"./IconOptions\");\nexports.IconOptions = IconOptions_1.IconOptions;\nconst Size_1 = require(\"./Size\");\nexports.Size = Size_1.Size;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = __importDefault(require(\"./Form\"));\nexports.Form = Form_1.default;\nconst GeometryForm_1 = __importDefault(require(\"./GeometryForm\"));\nexports.GeometryForm = GeometryForm_1.default;\nconst MarkerForm_1 = __importDefault(require(\"./MarkerForm\"));\nexports.MarkerForm = MarkerForm_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __importDefault(require(\"../Util\"));\nclass FormOptions {\n}\nexports.FormOptions = FormOptions;\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form {\n    constructor() {\n        this.util = Util_1.default.getInstance();\n    }\n    /** create every FormElement in the parentUiElement */\n    create(parentUiElement) {\n        this.options.parentUiElement = parentUiElement;\n        let formElements = this.getFormElements();\n        let styleFormKeys = Object.keys(formElements);\n        for (let i = 0; i < styleFormKeys.length; i++) {\n            let formElement = this.getFormElementClass(styleFormKeys[i]);\n            if (formElement !== undefined) {\n                formElement.create(parentUiElement);\n                this.options.initializedElements.push(formElement);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.options.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show() {\n        this.preShow();\n        this.showFormElements();\n        this.showForm();\n        this.style();\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() {\n    }\n    /** make every FormElement visible */\n    showFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.showFormElement(this.options.initializedElements[i]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.options.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].style();\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].lostFocus();\n        }\n    }\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.options.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n     * get the currently used formElements\n     * either standard or the ones provided while instanciation\n     */\n    getFormElements() {\n        let formElements;\n        formElements = this.options.formElements;\n        return formElements;\n    }\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass(styleOption) {\n        let formElements = this.getFormElements();\n        let formElementKeys = Object.keys(formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n                // try to instantiate FormElementOption and return StandardClass if it does not work\n                try {\n                    let formElementInstance = new FormElement({\n                        styleOption: styleOption,\n                        parentForm: this\n                    });\n                    if (formElementInstance instanceof FormElement) {\n                        return formElementInstance;\n                    }\n                }\n                catch (e) {\n                    // creating instance failed fallback to StandardClass\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption(styleOption) {\n        let formElements = this.getFormElements();\n        if (styleOption in formElements) {\n            let styleFormElement = formElements[styleOption];\n            // maybe a function is given to declare when to show the FormElement\n            if (typeof styleFormElement === 'function') {\n                try {\n                    return styleFormElement(this.util.getCurrentElement());\n                }\n                catch (err) {\n                    // the given function presumably is a constructor -> always show it\n                    return true;\n                }\n            }\n            // maybe a boolean is given to indicate whether to show it\n            if (typeof styleFormElement === 'boolean') {\n                return styleFormElement;\n            }\n            // check for dictionary\n            if ('boolean' in styleFormElement) {\n                // in a dictionary boolean may be a function or boolean\n                if (typeof styleFormElement['boolean'] === 'function') {\n                    return styleFormElement['boolean'](this.util.getCurrentElement());\n                }\n                return styleFormElement['boolean'];\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass(styleOption) {\n        return new this.options.formElements[styleOption]({ styleOption: styleOption, parentForm: this });\n    }\n}\nexports.default = Form;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.default {\n    createContent() {\n        this.options.colorPickerDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.options.uiElement);\n        this._getColorRamp().forEach(this._setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    _getColorRamp() {\n        /* TODO\n        if (!this.options.colorRamp) {\n          // if markers have own colorRamp use it\n          if (this.options.parentForm instanceof MarkerForm && !!this.styleEditor.options.markerType.options.colorRamp) {\n            this.options.colorRamp = this.styleEditor.options.markerType.options.colorRamp\n            // else use the default\n          } else {\n            this.options.colorRamp = this.styleEditor.options.colorRamp\n          }\n        }*/\n        return this.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    _setSelectCallback(color) {\n        let elem = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-color', this.options.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        leaflet_1.default.DomEvent.addListener(elem, 'click', this._selectColor, this);\n    }\n    /** set style for chosen color */\n    _selectColor(e) {\n        e.stopPropagation();\n        this.setStyle(this.util.rgbToHex(e.target.style.backgroundColor));\n        // marker styling needs additional function calls\n        if (e.target instanceof leaflet_1.default.Marker) {\n            // TODO this.styleEditor.options.markerType.setNewMarker(e)\n        }\n    }\n}\nexports.default = ColorElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends FormElement_1.default {\n    /** create the three standard dash options */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -115px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.default = DashElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used to style opacity\n */\nclass OpacityFormElement extends FormElement_1.default {\n    /** create number input box */\n    createContent() {\n        this.options.label = leaflet_1.default.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement);\n        let slider = leaflet_1.default.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.uiElement);\n        slider.type = 'range';\n        slider.max = String(1);\n        slider.min = String(0);\n        slider.step = String(0.01);\n        slider.value = String(0.5);\n        // add event listeners\n        leaflet_1.default.DomEvent.addListener(slider, 'change', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'input', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'keyup', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.options.slider.value = this.util.getStyle(this.options.styleOption);\n        this.options.label.innerText = 100 * parseInt(this.options.slider.value) + '%';\n    }\n    /** communicate opacity value */\n    _setStyle() {\n        this.setStyle(this.options.slider.value);\n    }\n}\nexports.default = OpacityFormElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends FormElement_1.default {\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let textArea = this.options.descTextAreaField = leaflet_1.default.DomUtil.create('textarea', 'leaflet-styleeditor-input', uiElement);\n        leaflet_1.default.DomEvent.addListener(textArea, 'change', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        let selectedElement = this.util.getCurrentElement();\n        if (selectedElement && selectedElement.options) {\n            this.options.descTextAreaField.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    _setStyle() {\n        let currentElement = this.util.getCurrentElement();\n        let inputText = this.options.descTextAreaField.value;\n        // check whether a layer is part of a layerGroup\n        let layers = [currentElement];\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            layers = currentElement.getLayers();\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let marker = layers[i];\n            if (marker && marker.getPopup && marker.bindPopup) {\n                let popup1 = marker.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    marker.bindPopup(inputText);\n                }\n                /*// tmp store the text content for init next time\n                marker.options = marker.options || {}\n                marker.options.popupContent = inputText\n                TODO*/\n            }\n        }\n        this.setStyle(inputText);\n    }\n}\nexports.default = PopupContentElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used to style weight\n */\nclass WeigthElement extends FormElement_1.default {\n    /** create number input box */\n    createContent() {\n        this.options.label = leaflet_1.default.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement);\n        let weight = leaflet_1.default.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.uiElement);\n        weight.type = 'range';\n        weight.min = String(0);\n        weight.max = String(20);\n        weight.step = String(1);\n        weight.value = String(4);\n        this.options.weight = weight;\n        // add event listeners\n        leaflet_1.default.DomEvent.addListener(weight, 'change', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'input', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'keyup', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.options.weight.value = this.util.getStyle(this.options.styleOption);\n        this.options.label.innerText = this.options.weight.value;\n    }\n    /** communicate weight value */\n    _setStyle() {\n        this.setStyle(this.options.weight.value);\n    }\n}\nexports.default = WeigthElement;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importStar(require(\"leaflet\"));\nconst Util_1 = __importDefault(require(\"./Util\"));\nconst DefaultMarker_1 = require(\"./marker/DefaultMarker\");\nconst StyleEditor_1 = require(\"./StyleEditor\");\nconst StyleForm_1 = __importDefault(require(\"./StyleForm\"));\nclass StyleEditorControl extends leaflet_1.Control {\n    constructor(options = defaultOptions) {\n        super();\n        this.util = Util_1.default.getInstance();\n        this.styleEditor = new StyleEditor_1.StyleEditor();\n        this.options = options;\n    }\n    onAdd(map) {\n        this.styleEditor.map = map;\n        return this.createUi();\n    }\n    fireEvent(eventName, element) {\n        this.util.fireEvent(eventName, element);\n    }\n    createUi() {\n        this.controlDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        this.controlUI = leaflet_1.default.DomUtil.create('a', 'leaflet-control-styleeditor-interior', this.controlDiv);\n        this.controlUI.title = 'Style Editor';\n        this.cancelUI = leaflet_1.default.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', this.controlDiv);\n        this.cancelUI.innerHTML = this.styleEditor.options.strings.cancel;\n        this.cancelUI.title = this.styleEditor.options.strings.cancelTitle;\n        this.styleEditorDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor', this.styleEditor.map.getContainer);\n        this.styleEditorHeader = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-header', this.styleEditorDiv);\n        this.styleEditorInterior = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-interior', this.styleEditorDiv);\n        this.addDomEvents();\n        this.addEventListeners();\n        this.addButtons();\n        this.styleForm = new StyleForm_1.default({\n            styleEditorDiv: this.styleEditorDiv,\n            styleEditorInterior: this.styleEditorInterior,\n        });\n        return this.controlDiv;\n    }\n    addDomEvents() {\n        leaflet_1.default.DomEvent.disableScrollPropagation(this.styleEditorDiv);\n        leaflet_1.default.DomEvent.disableScrollPropagation(this.controlDiv);\n        leaflet_1.default.DomEvent.disableScrollPropagation(this.cancelUI);\n        leaflet_1.default.DomEvent.disableClickPropagation(this.styleEditorDiv);\n        leaflet_1.default.DomEvent.disableClickPropagation(this.controlDiv);\n        leaflet_1.default.DomEvent.disableClickPropagation(this.cancelUI);\n        leaflet_1.default.DomEvent.on(this.controlDiv, 'click', function () {\n            this.toggle();\n        }, this);\n    }\n    addEventListeners() {\n        this.addLeafletDrawEvents();\n        this.addLeafletEditableEvents();\n    }\n    addLeafletDrawEvents() {\n        if (!this.options.openOnLeafletDraw || !leaflet_1.default.Control.Draw) {\n            return;\n        }\n        this.styleEditor.map.on('layeradd', this.onLayerAdd, this);\n        this.styleEditor.map.on(leaflet_1.default.Draw.Event.CREATED, this.onLayerCreated, this);\n    }\n    addLeafletEditableEvents() {\n        if (!this.options.openOnLeafletEditable || !leaflet_1.default.Editable) {\n            return;\n        }\n        this.styleEditor.map.on('layeradd', this.onLayerAdd, this);\n        this.styleEditor.map.on('editable:created', this.onLayerCreated, this);\n    }\n    onLayerCreated(layer) {\n        this.removeIndicators();\n        this.styleEditor.currentElement = layer.layer;\n    }\n    onLayerAdd(e) {\n        if (this.styleEditor.currentElement) {\n            if (e.layer === this.util.getCurrentElement()) {\n                this.enable(e.layer);\n            }\n        }\n    }\n    onRemove() {\n        // hide everything that may be visible\n        // remove edit events for layers\n        // remove tooltip\n        this.disable();\n        // remove events\n        this.removeDomEvents();\n        this.removeEventListeners();\n        // remove dom elements\n        leaflet_1.default.DomUtil.remove(this.styleEditorDiv);\n        leaflet_1.default.DomUtil.remove(this.cancelUI);\n        // delete dom elements\n        delete this.styleEditorDiv;\n        delete this.cancelUI;\n    }\n    removeEventListeners() {\n        this.styleEditor.map.off('layeradd', this.onLayerAdd);\n        if (leaflet_1.default.Draw) {\n            this.styleEditor.map.off(leaflet_1.default.Draw.Event.CREATED, this.onLayerCreated);\n        }\n        if (leaflet_1.default.Editable) {\n            this.styleEditor.map.off('editable:created', this.onLayerCreated);\n        }\n    }\n    removeDomEvents() {\n        leaflet_1.default.DomEvent.off(this.controlDiv, 'click', function () {\n            this.toggle();\n        }, this);\n    }\n    addButtons() {\n        let nextBtn = leaflet_1.default.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-nextBtn', this.styleEditorHeader);\n        nextBtn.title = this.options.strings.tooltipNext;\n        leaflet_1.default.DomEvent.on(nextBtn, 'click', function (e) {\n            this.hideEditor();\n            if (leaflet_1.default.DomUtil.hasClass(this.controlUI, 'enabled')) {\n                this.createTooltip();\n            }\n            e.stopPropagation();\n        }, this);\n    }\n    toggle() {\n        if (leaflet_1.default.DomUtil.hasClass(this.controlUI, 'enabled')) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable(layer) {\n        if (this._layerIsIgnored(layer)) {\n            return;\n        }\n        leaflet_1.default.DomUtil.addClass(this.controlUI, 'enabled');\n        this.styleEditor.map.eachLayer(this.addEditClickEvents, this);\n        this.showCancelButton();\n        this.createTooltip();\n        if (layer !== undefined) {\n            if (this.isEnabled()) {\n                this.removeIndicators();\n            }\n            this.initChangeStyle({ target: layer });\n        }\n    }\n    isEnabled() {\n        return leaflet_1.default.DomUtil.hasClass(this.controlUI, 'enabled');\n    }\n    disable() {\n        if (this.isEnabled()) {\n            this.editLayers.forEach(this.removeEditClickEvents, this);\n            this.editLayers = [];\n            this.layerGroups = [];\n            this.hideEditor();\n            this.hideCancelButton();\n            this.removeTooltip();\n            leaflet_1.default.DomUtil.removeClass(this.controlUI, 'enabled');\n        }\n    }\n    addEditClickEvents(layer) {\n        if (this._layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof leaflet_1.default.LayerGroup) {\n            this.layerGroups.push(layer);\n        }\n        else if (layer instanceof leaflet_1.default.Marker || layer instanceof leaflet_1.default.Path) {\n            let evt = layer.on('click', this.initChangeStyle, this);\n            this.editLayers.push(evt);\n        }\n    }\n    removeEditClickEvents(layer) {\n        layer.off('click', this.initChangeStyle, this);\n    }\n    addIndicators() {\n        if (!this.styleEditor.currentElement) {\n            return;\n        }\n        let currentElement = this.styleEditor.currentElement.target;\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            currentElement.eachLayer(function (layer) {\n                if (layer instanceof leaflet_1.default.Marker && layer.getElement()) {\n                    leaflet_1.default.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            });\n        }\n        else if (currentElement instanceof leaflet_1.default.Marker) {\n            if (currentElement.getElement()) {\n                leaflet_1.default.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n            }\n        }\n    }\n    removeIndicators() {\n        if (!this.styleEditor.currentElement) {\n            return;\n        }\n        let currentElement = this.util.getCurrentElement();\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            currentElement.eachLayer(function (layer) {\n                //TODO\n                const anything = layer;\n                if (anything.getElement()) {\n                    leaflet_1.default.DomUtil.removeClass(anything.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            });\n        }\n        else {\n            if (currentElement.getElement()) {\n                leaflet_1.default.DomUtil.removeClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n            }\n        }\n    }\n    hideEditor() {\n        if (leaflet_1.default.DomUtil.hasClass(this.styleEditorDiv, 'editor-enabled')) {\n            this.removeIndicators();\n            leaflet_1.default.DomUtil.removeClass(this.styleEditorDiv, 'editor-enabled');\n            this.fireEvent('hidden');\n        }\n    }\n    hideCancelButton() {\n        leaflet_1.default.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    showEditor() {\n        let editorDiv = this.styleEditorDiv;\n        if (!leaflet_1.default.DomUtil.hasClass(editorDiv, 'editor-enabled')) {\n            leaflet_1.default.DomUtil.addClass(editorDiv, 'editor-enabled');\n            this.fireEvent('visible');\n        }\n    }\n    showCancelButton() {\n        leaflet_1.default.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    initChangeStyle(e) {\n        this.removeIndicators();\n        this.styleEditor.currentElement = (this.options.useGrouping) ? this.getMatchingElement(e) : e;\n        this.addIndicators();\n        this.showEditor();\n        this.removeTooltip();\n        let layer = e;\n        if (!(layer instanceof leaflet_1.default.Layer)) {\n            layer = e.target;\n        }\n        this.fireEvent('editing', layer);\n        if (layer instanceof leaflet_1.default.Marker) {\n            // ensure iconOptions are set for Leaflet.Draw created Markers\n            this.options.markerType.resetIconOptions(layer);\n            // marker\n            this.showMarkerForm(layer);\n        }\n        else {\n            // layer with of type L.GeoJSON or L.Path (polyline, polygon, ...)\n            this.showGeometryForm(layer);\n        }\n    }\n    showGeometryForm(layer) {\n        this.fireEvent('geometry', layer);\n        this.styleForm.showGeometryForm();\n    }\n    showMarkerForm(layer) {\n        this.fireEvent('marker', layer);\n        this.styleForm.showMarkerForm();\n    }\n    createTooltip() {\n        if (!this.options.showTooltip) {\n            return;\n        }\n        if (!this.tooltipWrapper) {\n            this.tooltipWrapper =\n                leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.styleEditor.map.getContainer());\n        }\n        if (!this.tooltip) {\n            this.tooltip = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-tooltip', this.tooltipWrapper);\n        }\n        this.tooltip.innerHTML = this.options.strings.tooltip;\n    }\n    getMatchingElement(e) {\n        let group = null;\n        let layer = e.target;\n        for (let i = 0; i < this.layerGroups.length; ++i) {\n            group = this.layerGroups[i];\n            if (group && layer !== group && group.hasLayer(layer)) {\n                // we use the opacity style to check for correct object\n                if (!group.options || !group.options.opacity) {\n                    group.options = layer.options;\n                    // special handling for layers... we pass the setIcon function\n                    if (layer.setIcon) {\n                        group.setIcon = function (icon) {\n                            group.eachLayer(function (layer) {\n                                if (layer instanceof leaflet_1.default.Marker) {\n                                    layer.setIcon(icon);\n                                }\n                            });\n                        };\n                    }\n                }\n                return this.getMatchingElement({\n                    target: group\n                });\n            }\n        }\n        return e;\n    }\n    removeTooltip() {\n        if (this.tooltip && this.tooltip.parentNode) {\n            this.tooltip.remove();\n            this.tooltip = undefined;\n        }\n    }\n    _layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\nconst defaultOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    ignoreLayerTypes: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        cancel: 'Cancel',\n        cancelTitle: 'Cancel Styling',\n        tooltip: 'Click on the element you want to style',\n        tooltipNext: 'Choose another element you want to style'\n    },\n    useGrouping: true,\n    forms: {},\n    styleEditorEventPrefix: 'styleeditor:',\n    markerType: new DefaultMarker_1.DefaultMarker()\n};\n","import 'leaflet'\nimport { StyleEditorControl } from './Control'\n\nL.Marker.include({\n  styleEditor: {\n    type: 'Marker'\n  }\n})\n\nL.Polygon.include({\n  styleEditor: {\n    type: 'Polygon'\n  }\n})\n\nL.Polyline.include({\n  styleEditor: {\n    type: 'Polyline'\n  }\n})\n\nL.Rectangle.include({\n  styleEditor: {\n    type: 'Rectangle'\n  }\n})\n\nL.Control.StyleEditor = StyleEditorControl\n\nL.control.styleEditor = function (options) {\n  if (!options) {\n    options = {}\n  }\n  return new L.Control.StyleEditor(options)\n}\n\nexport default L\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst Marker_1 = require(\"./Marker\");\nconst types_1 = require(\"../types\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends Marker_1.Marker {\n    constructor() {\n        super();\n    }\n    createMarkerIcon(iconOptions, iconClass) {\n        if (!iconClass) {\n            iconClass = '';\n        }\n        let iconSize = iconOptions.iconSize;\n        return new leaflet_1.default.Icon({\n            iconUrl: this._getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize.dimen,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: iconClass,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        let tmpOptions = new types_1.IconOptions(types_1.Size.Small, icon, iconOptions.iconColor);\n        parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions, this.options.selectIconClass).createIcon().outerHTML;\n    }\n    _getMarkerUrlForStyle(iconOptions) {\n        return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    _getMarkerUrl(size, color, icon) {\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size.name;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\nconst markers = [\n    'circle-stroked',\n    'circle',\n    'square-stroked',\n    'square',\n    'triangle-stroked', 'triangle',\n    'star-stroked',\n    'star',\n    'cross',\n    'marker-stroked',\n    'marker',\n    'religious-jewish',\n    'religious-christian',\n    'religious-muslim',\n    'cemetery',\n    'rocket',\n    'airport',\n    'heliport',\n    'rail',\n    'rail-metro',\n    'rail-light',\n    'bus',\n    'fuel',\n    'parking',\n    'parking-garage',\n    'airfield',\n    'roadblock',\n    'ferry',\n    'harbor',\n    'bicycle',\n    'park',\n    'park2',\n    'museum',\n    'lodging',\n    'monument',\n    'zoo',\n    'garden',\n    'campsite',\n    'theatre',\n    'art-gallery',\n    'pitch',\n    'soccer',\n    'america-football',\n    'tennis',\n    'basketball',\n    'baseball',\n    'golf',\n    'swimming',\n    'cricket',\n    'skiing',\n    'school',\n    'college',\n    'library',\n    'post',\n    'fire-station',\n    'town-hall',\n    'police',\n    'prison',\n    'embassy',\n    'beer',\n    'restaurant',\n    'cafe',\n    'shop',\n    'fast-food',\n    'bar',\n    'bank',\n    'grocery',\n    'cinema',\n    'pharmacy',\n    'hospital',\n    'danger',\n    'industrial',\n    'warehouse',\n    'commercial',\n    'building',\n    'place-of-worship',\n    'alcohol-shop',\n    'logging',\n    'oil-well',\n    'slaughterhouse',\n    'dam',\n    'water',\n    'wetland',\n    'disability',\n    'telephone',\n    'emergency-telephone',\n    'toilets',\n    'waste-basket',\n    'music',\n    'land-use',\n    'city',\n    'town',\n    'village',\n    'farm',\n    'bakery',\n    'dog-park',\n    'lighthouse',\n    'clothing-store',\n    'polling-place',\n    'playground',\n    'entrance',\n    'heart',\n    'london-underground',\n    'minefield',\n    'rail-underground',\n    'rail-above',\n    'camera',\n    'laundry',\n    'car',\n    'suitcase',\n    'hairdresser',\n    'chemist',\n    'mobilephone',\n    'scooter'\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IconOptions {\n    constructor(iconSize, icon, iconColor) {\n        this.iconSize = iconSize;\n        this.icon = icon;\n        this.iconColor = iconColor;\n    }\n}\nexports.IconOptions = IconOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Size {\n    constructor(name, dimen) {\n        this.name = name;\n        this.dimen = dimen;\n    }\n}\nexports.Size = Size;\nSize.Small = new Size('small', [20, 50]);\nSize.Medium = new Size('medium', [30, 70]);\nSize.Large = new Size('large', [35, 90]);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst form_1 = require(\"../form\");\nconst Util_1 = __importDefault(require(\"../Util\"));\nconst types_1 = require(\"../types\");\n/**\n * The Base class for different markers\n */\nclass Marker {\n    constructor() {\n        this.util = Util_1.default.getInstance();\n        /** define markerForm used to style the Marker */\n        this.markerForm = new form_1.MarkerForm();\n        if (this.options.selectIconClass !== '' && !this.options.selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n            this.options.selectIconClass = 'leaflet-styleeditor-select-image-' + this.options.selectIconClass;\n        }\n    }\n    /** create new Marker and show it */\n    setNewMarker(currentElement) {\n        let newIcon = this._createMarkerIcon(currentElement);\n        currentElement = currentElement.target;\n        currentElement.setIcon(newIcon);\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            currentElement.eachLayer(function (layer) {\n                const layer2 = layer; // TODO find out where getElement comes from…\n                leaflet_1.default.DomUtil.addClass(layer2.getElement(), 'leaflet-styleeditor-marker-selected');\n            });\n        }\n        else {\n            leaflet_1.default.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    /** set styling options */\n    setStyle(currentElement, styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setIconOptions(currentElement, styleOption, value);\n        this.setNewMarker(currentElement);\n    }\n    /** create HTML used to */\n    createSelectHTML(parentUiElement, iconOptions, icon) { }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions(currentElement) {\n        try {\n            this.options.iconOptions = currentElement.target.options.icon.options;\n        }\n        catch (e) {\n            // if a new marker is created it may be the currentItem is still set, but is no marker\n        }\n        if (Object.keys(this.options.iconOptions).length > 0) {\n            return this.options.iconOptions;\n        }\n        this.options.iconOptions.iconColor = this._getDefaultMarkerColor();\n        this.options.iconOptions.iconSize = types_1.Size.Small;\n        this.options.iconOptions.icon = this.util.getDefaultMarkerForColor(this.options.iconOptions.iconColor);\n        this.options.iconOptions = this._ensureMarkerIcon(this.options.iconOptions);\n        return this.options.iconOptions;\n    }\n    resetIconOptions(currentElement) {\n        Object.keys(this.getIconOptions(currentElement)).forEach((key) => this.setStyle(currentElement, key, this.options.iconOptions[key]));\n    }\n    setIconOptions(currentElement, key, value) {\n        let iconOptions = this.getIconOptions(currentElement);\n        iconOptions[key] = value;\n    }\n    /** call createMarkerIcon with the correct iconOptions */\n    _createMarkerIcon(currentElement) {\n        let iconOptions = this.getIconOptions(currentElement);\n        return this.createMarkerIcon(iconOptions);\n    }\n    createMarkerIcon(iconOptions, iconClass) { }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getMarkersForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.options.colorRamp;\n        let generalColorRamp = [\"#000\"]; // TODO this.styleEditor.options.colorRamp\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = \"#000\"; //TOOD this.styleEditor.options.defaultMarkerColor\n        if (color !== null && intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = \"#000\"; // TODO this.styleEditor.options.defaultColor\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst Form_1 = __importStar(require(\"./Form\"));\nconst ColorElement_1 = __importDefault(require(\"../formElements/ColorElement\"));\nconst DashElement_1 = __importDefault(require(\"../formElements/DashElement\"));\nconst OpacityElement_1 = __importDefault(require(\"../formElements/OpacityElement\"));\nconst PopupContentElement_1 = __importDefault(require(\"../formElements/PopupContentElement\"));\nconst WeightElement_1 = __importDefault(require(\"../formElements/WeightElement\"));\nclass GeometryFormOptions extends Form_1.FormOptions {\n    constructor() {\n        super();\n        this.formOptionKey = 'geometry';\n        this.formElements = {\n            'color': new ColorElement_1.default(),\n            'opacity': new OpacityElement_1.default(),\n            'weight': new WeightElement_1.default(),\n            'dashArray': new DashElement_1.default(),\n            'fillColor': new ColorElement_1.default(),\n            'fillOpacity': new OpacityElement_1.default(),\n            'popupContent': new PopupContentElement_1.default()\n        };\n    }\n}\n/** Form used to enable modification of a Geometry */\nclass GeometryForm extends Form_1.default {\n    constructor() {\n        super(...arguments);\n        this.options = new GeometryFormOptions();\n    }\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            if (this.options.initializedElements[i].options.styleOption.indexOf('fill') === 0) {\n                if (this.util.fillCurrentElement()) {\n                    this.showFormElement(this.options.initializedElements[i]);\n                }\n                else {\n                    this.options.initializedElements[i].hide();\n                }\n            }\n            else {\n                this.showFormElement(this.options.initializedElements[i]);\n            }\n        }\n    }\n}\nexports.default = GeometryForm;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = require(\".\");\nconst IconElement_1 = __importDefault(require(\"../formElements/IconElement\"));\nconst ColorElement_1 = __importDefault(require(\"../formElements/ColorElement\"));\nconst SizeElement_1 = __importDefault(require(\"../formElements/SizeElement\"));\nconst PopupContentElement_1 = __importDefault(require(\"../formElements/PopupContentElement\"));\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionKey = 'marker';\n        this.formElements = {\n            'icon': new IconElement_1.default(),\n            'color': new ColorElement_1.default(),\n            'size': new SizeElement_1.default(),\n            'popupContent': new PopupContentElement_1.default()\n        };\n    }\n}\nexports.default = MarkerForm;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends FormElement_1.default {\n    constructor() {\n        super(...arguments);\n        // private classed used in the code\n        this._selectOptionWrapperClasses = 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden';\n        this._selectOptionClasses = 'leaflet-styleeditor-select-option';\n    }\n    /** create the icon selectBoxes */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let selectBox = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select', uiElement);\n        this.options.selectBoxImage = this._createSelectInputImage(selectBox);\n        leaflet_1.default.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style(currentElement) {\n        let iconOptions = this.options.markerType.getIconOptions(currentElement);\n        this._styleSelectInputImage(currentElement, this.options.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this._createColorSelect(this.options.markerType.options.iconOptions.iconColor);\n        this._hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this._hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage(parentUiElement) {\n        let wrapper = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage(currentElement, image, icon, color) {\n        if (!icon) {\n            icon = image.getAttribute('value');\n            if (!icon) {\n                return;\n            }\n        }\n        let iconOptions = this.options.markerType.getIconOptions(currentElement);\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        image.innerHTML = '';\n        this.options.markerType.createSelectHTML(image, iconOptions, icon);\n        image.setAttribute('value', icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect(color) {\n        if (!this.options.selectOptions) {\n            this.options.selectOptions = {};\n        }\n        if (color in this.options.selectOptions) {\n            return;\n        }\n        let uiElement = this.options.uiElement;\n        let selectOptionWrapper = leaflet_1.default.DomUtil.create('ul', this._selectOptionWrapperClasses, uiElement);\n        this.util.getMarkersForColor(color).forEach(function (option) {\n            let selectOption = leaflet_1.default.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper);\n            let selectImage = this._createSelectInputImage(selectOption);\n            this._styleSelectInputImage(selectImage, option, color);\n        }, this);\n        this.options.selectOptions[color] = selectOptionWrapper;\n        leaflet_1.default.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            if (target.parentElement.className === 'leaflet-styleeditor-select-image') {\n                target = target.parentElement;\n            }\n            else {\n                while (target && target.className !== 'leaflet-styleeditor-select-image') {\n                    target = target.children[0];\n                }\n            }\n            this._selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    _toggleSelectInput(e) {\n        let currentColorElement = this._getCurrentColorElement(this.util.rgbToHex(this.options.markerType.options.iconOptions.iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = leaflet_1.default.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this._hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    _selectMarker(e) {\n        let value = this._getValue(e.target);\n        // update style\n        this.options.selectBoxImage.setAttribute('value', value);\n        this.setStyle(value);\n        this._hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    _getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement(color) {\n        if (!this.options.selectOptions[color]) {\n            this._createColorSelect(color);\n        }\n        return this.options.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    _hideSelectOptions() {\n        for (let selectOption in this.options.selectOptions) {\n            this.util.hideElement(this.options.selectOptions[selectOption]);\n        }\n    }\n}\nexports.default = IconElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends FormElement_1.default {\n    /** create the 3 standard icon sizes */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.small);\n        }, this);\n        select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium);\n        }, this);\n        select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.large);\n        }, this);\n    }\n}\nexports.default = SizeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst form_1 = require(\"./form\");\nrequire('../css/Leaflet.StyleEditor.css');\nclass StyleEditor {\n    constructor(options) {\n        this.currentElement = null; // TODO type\n        this._editLayers = [];\n        this._layerGroups = [];\n        this.markerForm = new form_1.MarkerForm();\n        this.geometryForm = new form_1.GeometryForm();\n        this.options = options;\n    }\n}\nexports.StyleEditor = StyleEditor;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst Util_1 = __importDefault(require(\"./Util\"));\nclass StyleForm {\n    constructor(options) {\n        this.util = Util_1.default.getInstance();\n        this.options = options;\n        this.createMarkerForm();\n        this.createGeometryForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        leaflet_1.default.DomEvent.addListener(this.styleEditor.map, 'click', this.lostFocus, this);\n        leaflet_1.default.DomEvent.addListener(this.options.styleEditorDiv, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.styleEditor.markerForm.hide();\n        this.styleEditor.geometryForm.hide();\n    }\n    createMarkerForm() {\n        let markerDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.options.styleEditorInterior);\n        this.styleEditor.markerForm.create(markerDiv);\n    }\n    createGeometryForm() {\n        let markerDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.options.styleEditorInterior);\n        this.styleEditor.geometryForm.create(markerDiv);\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.styleEditor.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.styleEditor.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && leaflet_1.default.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.styleEditor.markerForm.lostFocus();\n        this.styleEditor.geometryForm.lostFocus();\n    }\n}\nexports.default = StyleForm;\n"],"sourceRoot":""}